* {
  margin: 0;
  padding: 0;
}

#hero {
  width: 100%;
  height: 100vh;
  background: #2c1414;
  position: relative;
}

.container {
  width: 90%;
  height: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  justify-content: center;
}

.btn {
  margin: 0 14px;
  font-size: 36px;
  font-weight: 666;
  padding: 10px 30px;
  border: 5px solid #ff00a1;
  border-radius: 10px;
  background: transparent;
  color: #ff00a1;
  text-shadow: #ff00a1 0 0 15px;
  box-shadow: #ff00a1 0 0 15px;
  transition: 0.4s;
  position: relative;
}

.btn:hover {
  color: white;
  text-shadow: none;
  border: 5px solid #ff00a1;
  box-shadow: #ff00a1 1px 0 125px;
  background: #ff00a1;
}

.link {
  color: red;
}

.ul li.active {
  color: yellow;
}

.ul li:nth-child(1).active {
  color: yellow;
}

.ul li:nth-child(2).active {
  color: yellow;
}

.ul li:nth-child(3).active {
  color: yellow;
}

.ul li:nth-child(4).active {
  color: yellow;
}

.ul li:nth-child(5).active {
  color: yellow;
}

.btn:before {
  width: 100%;
  height: 100%;
  background: #ff00a1;
  position: absolute;
  content: "";
  left: 0;
  top: 120%;
  transition: 0.4s;
  transform: perspective(2rem) rotateX(40deg) scale(1, 0.35);
  filter: blur(3rem);
}

.btn:hover:before {
  transform: perspective(1.5rem) rotateX(40deg) scale(1, 0.35);
}

:root {
  --clr: red;
  --bor: 6px solid blue ;
}

.block {
  position: relative;
  width: 100px;
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #000;
}

.block2 {
  position: relative;
  width: 60px;
  height: 60px;
  background: #ff00a1;
  border: var(--bor);
}

.ul {
  margin: 20px 0;
  display: flex;
}

.ul li {
  margin: 0 20px;
}

li {
  list-style: none;
}

.box {
  width: 500px;
  height: 500px;
  background: palevioletred;
}

.kub {
  width: 10px;
  height: 10px;
  background: lightgreen;
}

/*
  https://developer.mozilla.org/en/docs/Web/CSS/box-shadow
  box-shadow: [inset?] [top] [left] [blur] [size] [color];

  Tips:
    - We're setting all the blurs to 0 since we want a solid fill.
    - Add the inset keyword so the box-shadow is on the inside of the element
    - Animating the inset shadow on hover looks like the element is filling in from whatever side you specify ([top] and [left] accept negative values to become [bottom] and [right])
    - Multiple shadows can be stacked
    - If you're animating multiple shadows, be sure to keep the same number of shadows on hover/focus as non-hover/focus (even if you have to create a transparent shadow) so the animation is smooth. Otherwise, you'll get something choppy.
*/
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

/*// Animate the size, outside*/
.pulse:hover,
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em transparent;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 var(--hover);
  }
}
/*// Stack multiple shadows, one from the left, the other from the right*/
.close:hover,
.close:focus {
  box-shadow: inset -3.5em 0 0 0 var(--hover), inset 3.5em 0 0 0 var(--hover);
}

/*// Size can also be negative; see how it's smaller than the element*/
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

/*// Animating from the bottom*/
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

/*// And from the left*/
.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

/*// Multiple shadows, one on the outside, another on the inside*/
.offset {
  box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);
}
.offset:hover, .offset:focus {
  box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
}

/*//=== Set button colors*/
/*// If you wonder why use Sass vars or CSS custom properties...*/
/*// Make a map with the class names and matching colors*/
/*// Sass variables compile to a static string; CSS variables are dynamic and inherited*/
/*// Loop through the map and set CSS custom properties using Sass variables*/
.fill {
  --color: #a972cb;
  --hover: #cb72aa;
}

.pulse {
  --color: #ef6eae;
  --hover: #ef8f6e;
}

.close {
  --color: #ff7f82;
  --hover: #ffdc7f;
}

.raise {
  --color: #ffa260;
  --hover: #e5ff60;
}

.up {
  --color: #e4cb58;
  --hover: #94e458;
}

.slide {
  --color: #8fc866;
  --hover: #66c887;
}

.offset {
  --color: #19bc8b;
  --hover: #1973bc;
}

/*// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.*/
button {
  color: var(--color);
  transition: 0.25s;
}
button:hover, button:focus {
  border-color: var(--hover);
  color: #fff;
}

body {
  color: #fff;
  background: #17181c;
  font: 300 1em "Fira Sans", sans-serif;
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
  display: flex;
}

button {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: 1em 2em;
}

h1 {
  font-weight: 400;
}

code {
  color: #e4cb58;
  font: inherit;
}

.group-btn {
  margin-top: 50px;
}

/*# sourceMappingURL=index.css.map */
